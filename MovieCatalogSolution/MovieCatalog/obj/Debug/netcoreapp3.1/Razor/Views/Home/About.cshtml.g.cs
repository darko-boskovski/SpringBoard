#pragma checksum "C:\Users\Darko\Desktop\New folder (3)\MovieCatalogSolution\MovieCatalog\Views\Home\About.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ecdbf641391a8bc14addb542b65161df7a6424fa"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_About), @"mvc.1.0.view", @"/Views/Home/About.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Darko\Desktop\New folder (3)\MovieCatalogSolution\MovieCatalog\Views\_ViewImports.cshtml"
using MovieCatalog;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Darko\Desktop\New folder (3)\MovieCatalogSolution\MovieCatalog\Views\_ViewImports.cshtml"
using MovieCatalog.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Darko\Desktop\New folder (3)\MovieCatalogSolution\MovieCatalog\Views\_ViewImports.cshtml"
using MovieCatalog.ViewModels;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ecdbf641391a8bc14addb542b65161df7a6424fa", @"/Views/Home/About.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"13404e702f0be79f231f3f1df97dcfc94cb4854f", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_About : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Darko\Desktop\New folder (3)\MovieCatalogSolution\MovieCatalog\Views\Home\About.cshtml"
  
    ViewData["Title"] = "About";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<h4>Bringing your movie collection under control</h4>

<p>If you use MovieCatalog, the movie catalog program, you will always know where on your shelf or on your hard drive a particular movie can be found, what audio tracks, subtitles and other parameters it has. A sensible film synopsis along with the list of actors and with the movie cover will be a bonus.</p>

<h4>Memories about the movie</h4>

<p>After adding a movie to MovieCatalog you will always remember if you have already watched it, what the movie is about and how much you liked it. A glance at the movie description and shots from the film will suffice. Shots can be added automatically from the corresponding file or DVD. MovieCatalog can store your own <strong>movie rating</strong>, as well as ratings of online movie databases (like IMDb).</p>

<h4>You are a movie expert</h4>

<p>
    Thanks to MovieCatalog you will know everything about the world of movies. Learn what awards were given to the film, its budget, what people
    were s");
            WriteLiteral(@"tarring in it. Find out at what age the actors played in the movie, when they were born, in what other films they participated. Prepare yourself to be called a ""walking encyclopedia"".
</p>

<h4>Create a movie catalog</h4>

<p>You can create an illustrated movie catalog for media players: <a href=""/articles/create-a-movie-catalog-for-dune-media-players.htm?ref=splash_dune"">Dune</a>, 
<a href=""/articles/movie-catalog-popcorn-hour-a-400.htm?ref=splash_popcorn"">Popcorn</a>, WDTV and Google TV.</p>

<h4>Where did I see this actor?..</h4>

<p>In a few seconds you will learn everything about the movie or the actor that you find interesting. The film cataloger will automatically perform an Internet search and download necessary information (movie synopsis, movie cover, movie rating, <strong>movie awards</strong>, gross, shots, <strong>filmography</strong>). All of this will be saved in the local film database, and you will be able to remember instantly in which movie a favorite actor played, or to review a ");
            WriteLiteral("<strong>movie description</strong>.</p>\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
